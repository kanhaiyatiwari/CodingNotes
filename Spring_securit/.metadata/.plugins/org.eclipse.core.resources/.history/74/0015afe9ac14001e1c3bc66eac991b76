package com.masai;

import org.apache.catalina.realm.JNDIRealm.User;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

import com.fasterxml.jackson.databind.introspect.TypeResolutionContext.Basic;

@Configuration
public class appConfigration {

	@Bean
	public SecurityFilterChain masaiChain(HttpSecurity http) throws Exception {
		
		http.authorizeHttpRequests(auth->{
			auth.requestMatchers("/admin").permitAll()
			.anyRequest().authenticated();
		}).formLogin(Customizer.withDefaults())
		.httpBasic(Customizer.withDefaults());
		return http.build();
		
	}
	
	@Bean
	public InMemoryUserDetailsManager userDetails() {
	InMemoryUserDetailsManager userDetailsService = new InMemoryUserDetailsManager();
	UserDetails admin = User.withUsername("admin").password("12345").authorities("admin").build();
	UserDetails user = User.withUsername("user").password("12345").authorities("read").build();
	userDetailsService.createUser(admin);
	userDetailsService.createUser(user);
	return userDetailsService;
	}
	
	@Bean
	public PasswordEncoder passwordEncoder() {



	return NoOpPasswordEncoder.getInstance();
	}
}
